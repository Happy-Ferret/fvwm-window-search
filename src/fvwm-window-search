#!/usr/bin/env ruby

def mruby?
  RUBY_ENGINE == 'mruby'
end

if mruby?
  def __dir__
    File.dirname __FILE__
  end
end

$: << __dir__

unless mruby?
  require 'getoptlong'
  require 'shellwords'
  require 'json'
end

require 'lib/meta'
require 'lib/filter'
require 'lib/winlist'

$conf = {
  'verbose' => 0,

  'dmenu' => {
    'exe' => File.join(__dir__, 'dmenu'),
    'font' => '-*-terminus-bold-r-*-*-18-*-*-*-*-*-*-*',
    'lines' => 10,
    'selhook' => "FvwmCommand \\\"WindowId \\`echo %s | awk -F, '{print \\$NF}'\\` FuncFvwmRaiseWindow\\\""
  },

  'winlist' => {
    'iconified' => true,
    'pageonly' => false,
    'filter_dir' => File.join(__dir__, 'etc'),
    'verbose' => 0,
    'format' => '%-100s | %-20s %s, %s',
  }
}

def dmenu text
  cmd = "#{$conf['dmenu']['exe']} -i -b -l #{$conf['dmenu']['lines']} -fn #{Shellwords.escape($conf['dmenu']['font'])} -selhook \"#{$conf['dmenu']['selhook']}\""
  puts "POPEN: #{cmd}" if $conf['verbose'] > 0
  IO.popen(cmd, 'w') { |ios| ios.puts text }
end

def usage opts = nil
  puts "Usage: #{File.basename $0} [options]"

  if opts
    puts "Options:"
    opts.each { |idx| puts "  #{idx[0]}" }
  end
end



# load config values
begin
  $conf.merge! JSON.parse File.read File.join(__dir__, 'etc', 'config.json')
rescue Errno::ENOENT
end

opts = [
        [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
        [ '--verbose', '-v', GetoptLong::NO_ARGUMENT ],
        [ '--version', '-V', GetoptLong::NO_ARGUMENT ],
        [ '--font', GetoptLong::REQUIRED_ARGUMENT ],
        [ '--dmenu', GetoptLong::REQUIRED_ARGUMENT ],
        [ '--lines', '-l', GetoptLong::REQUIRED_ARGUMENT ],
        [ '--filter-dir', GetoptLong::REQUIRED_ARGUMENT ],
        [ '--no-iconified', GetoptLong::NO_ARGUMENT ],
        [ '--pageonly', GetoptLong::NO_ARGUMENT ],
        [ '--format', GetoptLong::REQUIRED_ARGUMENT ],
        [ '--selhook', GetoptLong::REQUIRED_ARGUMENT ],
       ]
optparser = GetoptLong.new(*opts)

begin
  optparser.each do |opt, arg|
    case opt
    when '--help'
      usage opts
      exit 0
    when '--verbose'
      $conf['verbose'] += 1
      $conf['winlist']['verbose'] = $conf['verbose']
    when '--dmenu'
      $conf['dmenu']['exe'] = arg
    when '--font'
      $conf['dmenu']['font'] = arg
    when '--lines'
      $conf['dmenu']['lines'] = arg.to_i
    when '--filter-dir'
      $conf['winlist']['filter_dir'] = arg
    when '--no-iconified'
      $conf['winlist']['iconified'] = false
      $stderr.puts "--no-iconofied isn't implemented"
      exit 1
    when '--pageonly'
      $conf['winlist']['pageonly'] = true
    when '--format'
      $conf['winlist']['format'] = arg
    when '--selhook'
      $conf['dmenu']['selhook'] = arg
    when '--version'
      puts '%-14s: %s %s' % ['Name', FvwmWindowSearch::Meta::NAME, FvwmWindowSearch::Meta::VERSION]
      puts '%-14s: %s %s' % ['Engine', RUBY_ENGINE, mruby? ? MRUBY_VERSION : RUBY_VERSION]
      puts '%-14s: %s' % ['Configuration', $conf]
      puts '%-14s: %s' % ['Fvwm', ENV['FVWM_USERDIR'] ? 'Yes' : 'No']
      exit
    end
  end
rescue GetoptLong::Error
  # GetoptLong will still complain independently
  exit 1
end

winlist = WinList.new $conf['winlist']
puts winlist.get.join "\n" if $conf['verbose'] > 0
dmenu winlist.get.join "\n"
