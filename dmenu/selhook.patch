diff --git a/config.def.h b/config.def.h
index c2a23fa..0d157c0 100644
--- a/config.def.h
+++ b/config.def.h
@@ -15,3 +15,5 @@ static const char *outfgcolor  = "#000000";
 /* -l option; if nonzero, dmenu uses vertical list with given number of lines */
 static unsigned int lines = 0;
 
+/* -selhook option; run command on every selection */
+static const char *selection_hook = NULL;
diff --git a/dmenu.c b/dmenu.c
index 94c70de..a541532 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -36,6 +36,7 @@ static void match(void);
 static size_t nextrune(int inc);
 static void paste(void);
 static void readstdin(void);
+static void selhook(const char *str, const Item *item);
 static void run(void);
 static void setup(void);
 static void usage(void);
@@ -99,6 +100,8 @@ main(int argc, char *argv[]) {
 			selbgcolor = argv[++i];
 		else if(!strcmp(argv[i], "-sf"))  /* selected foreground color */
 			selfgcolor = argv[++i];
+		else if(!strcmp(argv[i], "-selhook"))  /* command to run */
+			selection_hook = argv[++i];
 		else
 			usage();
 
@@ -515,6 +518,7 @@ run(void) {
 			break;
 		case KeyPress:
 			keypress(&ev.xkey);
+			selhook(selection_hook, sel);
 			break;
 		case SelectionNotify:
 			if(ev.xselection.property == utf8)
@@ -528,6 +532,63 @@ run(void) {
 	}
 }
 
+/*
+ * Replacing all instances of ' with '\'' then enclosing the whole
+ * string in single quotes (') is the safe way.
+ * */
+static char *
+shellquote(const char *src)
+{
+	char *quoted, *q;
+	const char *p;
+
+	if (!src) return NULL;
+	p = src;
+
+	if (!(quoted = malloc(strlen(src)*4+3))) eprintf("malloc failed");
+	q = quoted;
+
+	*q++ = '\'';
+	while (*p) {
+		if (*p == '\'') {
+			*q++ = '\'';
+			*q++ = '\\';
+			*q++ = '\'';
+			*q++ = '\'';
+		} else {
+			*q++ = *p;
+		}
+
+		p++;
+	}
+	*q++ = '\'';
+	*q = '\0';
+
+	return quoted;
+}
+
+void
+selhook(const char *str, const Item *item)
+{
+	char *cmd, *quoted_item_text;
+	size_t cmd_size;
+
+	if (!(str && item)) return;
+	quoted_item_text = shellquote(item->text);
+	/* printf("QUOTED: >%s<\n", quoted_item_text); */
+
+	cmd_size = strlen(str) + strlen(quoted_item_text) + 1;
+	if (!(cmd = malloc(cmd_size)))
+		eprintf("malloc failed");
+	snprintf(cmd, cmd_size, str, quoted_item_text);
+
+	/* printf("SELECTED HOOK: %s\n", cmd); */
+	system(cmd);
+
+	free(quoted_item_text);
+	free(cmd);
+}
+
 void
 setup(void) {
 	int x, y, screen = DefaultScreen(dc->dpy);
@@ -621,6 +682,6 @@ setup(void) {
 void
 usage(void) {
 	fputs("usage: dmenu [-b] [-f] [-i] [-l lines] [-p prompt] [-fn font] [-m monitor]\n"
-	      "             [-nb color] [-nf color] [-sb color] [-sf color] [-v]\n", stderr);
+	      "             [-nb color] [-nf color] [-sb color] [-sf color] [-v] [-selhook cmd]\n", stderr);
 	exit(EXIT_FAILURE);
 }
